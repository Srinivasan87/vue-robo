{"remainingRequest":"C:\\GitHub\\vue-robo\\node_modules\\babel-loader\\lib\\index.js!C:\\GitHub\\vue-robo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitHub\\vue-robo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitHub\\vue-robo\\src\\parts\\Partinfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\GitHub\\vue-robo\\src\\parts\\Partinfo.vue","mtime":1560612671391},{"path":"C:\\GitHub\\vue-robo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\vue-robo\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\GitHub\\vue-robo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\vue-robo\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _Number$isInteger from \"C:\\\\GitHub\\\\vue-robo\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/number/is-integer\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport parts from '../data/parts';\nexport default {\n  name: 'PartInfo',\n  props: {\n    partType: {\n      type: String\n    },\n    id: {\n      type: [Number, String],\n      validator: function validator(value) {\n        return _Number$isInteger(Number(value));\n      }\n    }\n  },\n  computed: {\n    part: function part() {\n      var partType = this.partType,\n          id = this.id;\n      return parts[partType].find(function (part) {\n        return part.id === +id;\n      });\n    }\n  }\n};",{"version":3,"sources":["Partinfo.vue"],"names":[],"mappings":";;;;;;;;;;;;AAUA,OAAA,KAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KADA;AAEA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,SAFA,qBAEA,KAFA,EAEA;AACA,eAAA,kBAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA;AAJA;AAFA,GAFA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA,UACA,QADA,GACA,IADA,CACA,QADA;AAAA,UACA,EADA,GACA,IADA,CACA,EADA;AAEA,aAAA,KAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA;AAJA;AAXA,CAAA","sourcesContent":["<template>\r\n<div>\r\n    <h1>{{part.title}}</h1>\r\n<div>\r\n    {{part.description}}\r\n</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport parts from '../data/parts';\r\n\r\nexport default {\r\nname: 'PartInfo',\r\nprops: {\r\n    partType:{ type: String },\r\n    id:{ \r\n        type: [Number,String],\r\n        validator(value){\r\n            return Number.isInteger(Number(value));\r\n        },\r\n    },\r\n},\r\ncomputed: {\r\n    part(){\r\n        const { partType, id } = this;\r\n        return parts[partType].find(part => part.id === +id);\r\n    },\r\n  },\r\n};\r\n</script>"],"sourceRoot":"src/parts"}]}